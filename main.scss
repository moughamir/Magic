/**

    TODO:
    - Slides Container:  w:652xh:640
    - (Re)Start Button: 155x46
    - screen toggle: 40x40
3912
3840
 */

.future {
    display: none;
}

.past {
    display: none;
}


/* .step {
 opacity: 0;
transition: opacity 100ms;
}
.step.active {
 opacity: 1;
} */


/*=================================
 =            Variables            =
 =================================*/


/* Dir */

$img: "../images" !default;
.hidden {
    opacity: 0;
}


/* Container size */

$c-w:652px;
$c-h:640px;

/* Imports */

@import "sass/reset";
@import "sass/animations";
@import "sass/butterfly";
/*=====  End of Variables  ======*/


/* Utils */

section.col-md-8 {
    width: 100vw;
    height: 100vh;
    display: flex;
    justify-content: center;
    align-items: center;
}

.flex-c {
    display: flex;
    justify-content: center;
    align-items: center;
}

a {
    text-decoration: none;
}

//* .cardC {
//    transform: translate(35%, 85%) rotate(45deg);
//    display: inline-block;
//   position: absolute;
//    @for $i from 1 through 22 {
//       &:nth-child(#{$i}n) {
//          z-index: 100 - $i;
//         transform: translate((35% + ($i*2)), 85%)  rotate(45deg - ($i * ($i/2)));
//    }
//    }
//} */
button {
    border: none;
    outline: none;
    cursor: pointer;
    background: #89669b;
    color: white;
    padding: 18px 60px;
    border-radius: 2px;
    font-size: 22px;
}

.fab {
    border-radius: 50%;
    margin: 0;
    padding: 20px;
}

.material {
    position: relative;
    color: white;
    margin: 20px auto;
    height: 400px;
    width: 500px;
    background: #f45673;
}

.ripple {
    overflow: hidden;
}

.ripple-effect {
    position: absolute;
    border-radius: 50%;
    width: 50px;
    height: 50px;
    background: white;
    animation: ripple-animation 2s;
}

@keyframes ripple-animation {
    from {
        transform: scale(1);
        opacity: 0.4;
    }
    to {
        transform: scale(100);
        opacity: 0;
    }
}


/* End of Utils */


/* btns */

/* .getting {
    width: 155px;
height: 46px;
    background: #4F01AF;
    color: #fff;
    font-family: 'Roboto', sans-serif;
    position: relative;
    top: 80%;
    left: 50%;
    transform: translate(-50%, -80%);
    font-size: 1.22rem;
}
 */

/* End of btns*/

.container {
    width: $c-w;
    height: $c-h;
    background: #B3DEFA;
    overflow: hidden;
    position: relative;
    display: block;
    box-shadow: 0 0 3px #2E2E2E;
}

.parallax-tarot {
    position: absolute;
    width: 100% !important;
    height: 100% !important;
  background: #FF8686 url(../images/prototype.png) 0px -1px no-repeat;
  animation: bgAnimate 1800ms ease;
}

@keyframes bgAnimate {
    0% {
        transform: scale(1) translate(0px, 0px);
    }
    50% {
        transform: scale(0.5) translate(-1600px, -650px);
    }
    100% {
        transform: scale(1) translate(-655px, 0px);
    }
}

h1 {
    color: #AAA439;
    font-size: 72px;
}

.slide {
    width: $c-w;
    height: $c-h;
    /* background: #27586B; */
    position: absolute;
}

.utils {
    z-index: 100;
}

#intro {
    z-index: 99;
}

#voyant {
    z-index: 98;
}

#pick {
    z-index: 97;
}

#draw {
    z-index: 96;
}

#interpret {
    z-index: 95;
}

#read {
    z-index: 94;
}

#result {
    z-index: 93;
}


/* Logo */

.st0 {
    fill: #FF7373;
    stroke: #FDFEFF;
    stroke-width: 2;
    stroke-miterlimit: 10;
}

svg#tarot-title {
    width: 474px;
    height: 249px;
    position: absolute;
    left: 50%;
    top: 40px;
    transform: translate(-50%);
    & * {
        fill-opacity: 0;
        transition: fill-opacity 1s;
    }
    &.finished * {
        fill-opacity: 1;
        stroke-width: 0 !important;
    }
}


/**/

/// Mixin to place items on a circle
/// @author Hugo Giraudel
/// @author Ana Tudor
/// @param {Integer} $item-count - Number of items on the circle
/// @param {Length} $circle-size - Large circle size
/// @param {Length} $item-size - Single item size
@mixin on-arc($item-count, $circle-size, $item-size) {
    position: relative;
    width: 600px;
    height: 600px;
    list-style: none;
    top: 50%;
    transform: translate(-50%, -25%);
    left: 40%;
    > * {
        display: block;
        position: absolute;
        top: 50%;
        left: 50%;
        $angle: (120 / $item-count);
        $rot: 32;
        @for $i from 1 through $item-count {
            &:nth-of-type(#{$i}) {
                /* transform: rotate($rot * 1deg) translate($circle-size / 2) rotate($rot * -1deg); */
                z-index: 100 - $i;
                left: 10px - ($i * 25) !important;
            }
            $rot: $rot + $angle;
        }
    }
}

.circle-container {
    @include on-arc($item-count: 22, $circle-size: 600px, $item-size: 50%);
    .cardC {
        display: block;
        max-width: 100%;
        margin: -15px;
        border-radius: 5px;
        filter: grayscale(100%);
        transition: .15s;
        overflow: hidden;
        &:hover,
        &:active {
            filter: grayscale(0);
            cursor: pointer;
            top: 280px;
        }
    }
}

.card {
    display: flex;
    justify-content: center;
    align-items: center;
    margin: 8px;
    position: absolute;
    padding: 5px;
    overflow: hidden;
    background: rgb(255, 255, 255);
    box-shadow: 0 0 5px #3c3c3c;
    width: 612px;
    height: 345px;
    border: 1px solid rgb(214, 214, 214);
    border-radius: 3px;
    @for $i from 1 through 22 {
        &:nth-child(#{$i}n) {
            z-index: 100 - $i;
            /* display: none; */
        }
    }
}

.card-front {
    width: 99px;
    display: inline-block;
    border: 2px solid #fff;
    border-radius: 5px;
    margin-right: 5px;
}

.cardReading {
    width: 460px;
    background: #fff;
  padding: 5px 10px 5px 0;
}


/* .generateCard (@n, @i: 1) when ( @i =< @n){
  $deg : 45deg;
  $delta_deg : @deg * 2 / @n;
  
  &:nth-child(@{i}){
   left: 30px * @i;
   transform: rotate(-@deg + (@i * @delta_deg));
   .getTop(@i,@n);
   &:hover{
      transform: rotate(-@deg + (@i * @delta_deg)) translate(0, -20px);
   }
  }
  .generateCard(@n, (@i + 1)); 
}
 */

///* @mixin generateCard($i) {
//  @for $i from 1 through 3 {
//  .item-#{$i} { width: 2em * $i; }
//}
//}
// */
// Modal
* {
    margin: 0;
    padding: 0;
}

$oxy: 'Oxygen',
sans-serif;
$opensans: 'Open Sans',
sans-serif;
$meri:'Merienda One',
cursive;
.container {
    position: relative;
    width: 652px;
    height: 640px;
}

.hidden {
    display: none !important;
}

.modalo {
    position: absolute;
    width: 590px;
    height: 537px;
    background-color: rgba(0, 0, 0, 0.22);
    font-family: "Oxygen", sans-serif;
    font-weight: 300;
    border-radius: 4px;
    color: #F5F5F5;
    top: 50px;
    left: 50%;
    transform: translate(-50%, 10px);
    .voyant {
        border-radius: 50%;
        width: 100px;
        height: 100px;
        border: 4px solid #fff;
        overflow: hidden;
        position: absolute;
        left: 50%;
        top: -100px;
        transform: translate(-50%, 50px);
        img {
            width: 100px;
        }
    }
    &-content {
        margin: 0;
        display: flex;
        justify-content: center;
        align-items: center;
        width: 100%;
        height: 480px;
        .stack {
            display: flex;
            position: absolute;
            width: 90%;
            flex-direction: column;
            align-items: center;
            .sub-art {
                margin-bottom: 30px;
            }
        }
    }
}

$text-color: #9B9B9B;
$text-color-f: #F0F0F0;
$bordercolor: #4A4A4A;
$bordercolor-f: #FF8080;
$input-w: 360px;
$input-w-f: $input-w + 100;
img.icon {
    width: 17px;
    margin-right: 7px;
}

.btn {
    display: block;
    letter-spacing: 4px;
    color: #fff;
    font-size: 20px;
    text-transform: uppercase;
    background-color: #2aa1c0;
    border: none;
    height: 62px;
    border-bottom: 2px solid #4A4A4A;
    width: $input-w;
  position: absolute;
  top: 458px;
  left: 50%;
  transform: translateX(-50%);
}

.con {
    border-top: 1px solid rgba(255, 255, 255, 0.05);
    margin-top: 15px;
    padding-top: 20px;
    &-form {
        display: flex;
        justify-content: center;
        flex-direction: column;
        align-items: center;
    }
}

// Form
.label {
    display: block;
    letter-spacing: 3px;
    padding-top: 3px;
    text-align: center;
    &-text {
        color: $text-color;
        cursor: text;
        font-size: 16px;
        line-height: 20px;
        text-transform: uppercase;
        transform: translateY(-34px);
        transition: all 0.3s;
    }
    input {
        background-color: transparent;
        border: 0;
        border-bottom: 2px solid $bordercolor;
        color: white;
        font-size: 36px;
        letter-spacing: -1px;
        outline: 0;
        padding: 5px 20px;
        text-align: center;
        transition: all 0.3s;
        width: $input-w;
        &:focus {
            width: $input-w-f;
            border-bottom: 2px solid $bordercolor-f;
            &::placeholder {
                opacity: 0.5;
                transition: all 0.5s;
            }
        }
        &:focus + .label-text {
            color: $text-color-f;
            font-size: 13px;
            transform: translateY(-74px);
        }
        &:valid + .label-text {
            font-size: 13px;
            transform: translateY(-74px);
        }
        &::placeholder {
            opacity: 0;
        }
    }
}

.checkbox-group {
  width: 360px;
    display: flex;
    justify-content: space-around;
    align-items: center;
    height: 30px;
}

.control {
    font-size: 18px;
    position: relative;
    display: block;
    padding-left: 30px;
    cursor: pointer;
    & input {
        position: absolute;
        z-index: -1;
        opacity: 0;
    }
    &__indicator {
        position: absolute;
        top: 2px;
        left: 0;
        width: 20px;
        height: 20px;
        background: #e6e6e6;
    }
    &--radio &__indicator {
        border-radius: 50%;
    }
    /* Hover and focus states */
    &:hover input ~ &__indicator,
    & input:focus ~ &__indicator {
        background: #ccc;
    }
    /* Checked state */
    & input:checked ~ &__indicator {
        background: #2aa1c0;
    }
    /* Hover state whilst checked */
    &:hover input:not([disabled]):checked ~ &__indicator,
    & input:checked:focus ~ &__indicator {
        background: #0e647d;
    }
    /* Disabled state */
    .control input:disabled ~ .control__indicator {
        pointer-events: none;
        opacity: .6;
        background: #e6e6e6;
    }
    /* Check mark */
    &__indicator:after {
        position: absolute;
        display: none;
        content: '';
    }
    /* Show check mark */
    & input:checked ~ &__indicator:after {
        display: block;
    }
    /* Checkbox tick */
    .control--checkbox .control__indicator:after {
        top: 4px;
        left: 8px;
        width: 3px;
        height: 8px;
        transform: rotate(45deg);
        border: solid #fff;
        border-width: 0 2px 2px 0;
    }
    /* Disabled tick colour */
    &--checkbox input:disabled ~ &__indicator:after {
        border-color: #7b7b7b;
    }
    /* Radio button inner circle */
    &--radio &__indicator:after {
        top: 7px;
        left: 7px;
        width: 6px;
        height: 6px;
        border-radius: 50%;
        background: #fff;
    }
    /* Disabled circle colour */
    &--radio input:disabled ~ &__indicator:after {
        background: #7b7b7b;
    }
}

// END OF FORM
.thanks {
    .sayThanks {
        font-family: $meri;
        font-size: 3em;
        text-shadow: 1px 1px black;
    }
    p {
        font-family: $opensans;
        font-size: 2em;
    }
}
